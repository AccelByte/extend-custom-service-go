// Code generated by MockGen. DO NOT EDIT.
// Source: extend-custom-guild-service/pkg/pb (interfaces: GuildServiceServer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	guild "extend-custom-guild-service/pkg/pb"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGuildServiceServer is a mock of GuildServiceServer interface.
type MockGuildServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockGuildServiceServerMockRecorder
}

// MockGuildServiceServerMockRecorder is the mock recorder for MockGuildServiceServer.
type MockGuildServiceServerMockRecorder struct {
	mock *MockGuildServiceServer
}

// NewMockGuildServiceServer creates a new mock instance.
func NewMockGuildServiceServer(ctrl *gomock.Controller) *MockGuildServiceServer {
	mock := &MockGuildServiceServer{ctrl: ctrl}
	mock.recorder = &MockGuildServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGuildServiceServer) EXPECT() *MockGuildServiceServerMockRecorder {
	return m.recorder
}

// CreateOrUpdateGuildProgress mocks base method.
func (m *MockGuildServiceServer) CreateOrUpdateGuildProgress(arg0 context.Context, arg1 *guild.CreateOrUpdateGuildProgressRequest) (*guild.CreateOrUpdateGuildProgressResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateGuildProgress", arg0, arg1)
	ret0, _ := ret[0].(*guild.CreateOrUpdateGuildProgressResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrUpdateGuildProgress indicates an expected call of CreateOrUpdateGuildProgress.
func (mr *MockGuildServiceServerMockRecorder) CreateOrUpdateGuildProgress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateGuildProgress", reflect.TypeOf((*MockGuildServiceServer)(nil).CreateOrUpdateGuildProgress), arg0, arg1)
}

// GetGuildProgress mocks base method.
func (m *MockGuildServiceServer) GetGuildProgress(arg0 context.Context, arg1 *guild.GetGuildProgressRequest) (*guild.GetGuildProgressResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGuildProgress", arg0, arg1)
	ret0, _ := ret[0].(*guild.GetGuildProgressResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGuildProgress indicates an expected call of GetGuildProgress.
func (mr *MockGuildServiceServerMockRecorder) GetGuildProgress(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGuildProgress", reflect.TypeOf((*MockGuildServiceServer)(nil).GetGuildProgress), arg0, arg1)
}

// mustEmbedUnimplementedGuildServiceServer mocks base method.
func (m *MockGuildServiceServer) mustEmbedUnimplementedGuildServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedGuildServiceServer")
}

// mustEmbedUnimplementedGuildServiceServer indicates an expected call of mustEmbedUnimplementedGuildServiceServer.
func (mr *MockGuildServiceServerMockRecorder) mustEmbedUnimplementedGuildServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedGuildServiceServer", reflect.TypeOf((*MockGuildServiceServer)(nil).mustEmbedUnimplementedGuildServiceServer))
}
